version: "3"
services:

  opendora:
    profiles:
      - test
    build:
      context: ../devlake-go/
      dockerfile: Dockerfile
      # target: dev
      args:
        USER_ID: ${USER_ID-1000}
        GROUP_ID: ${GROUP_ID-1000}
    restart: unless-stopped
    ports:
      - "10666:10666"
    environment:
      BACKSTAGE_URL: ${BACKSTAGE_URL-http://backstage:7007/}
      DEVLAKE_URL: ${DEVLAKE_URL-http://config-ui:4000/}
      DEVLAKE_DBUSER: ${DEVLAKE_DBUSER-merico}
      DEVLAKE_DBPASS: ${DEVLAKE_DBPASS-merico}
      DEVLAKE_DBADDRESS: ${DEVLAKE_DBADDRESS-mysql:3306}
      DEVLAKE_DBNAME: ${DEVLAKE_DBNAME-lake}
    extra_hosts:
        - "host.docker.internal:host-gateway"

  dora-mock-api:
    profiles:
      - dev
    build:
      context: ../dora-api-mock/
      dockerfile: Dockerfile
      target: dev
      args:
        USER_ID: ${USER_ID-1000}
        GROUP_ID: ${GROUP_ID-1000}
    restart: unless-stopped
    ports:
      - "10666:10666"

  backstage:
    build:
      context: ./backstage/
      dockerfile: Dockerfile
      target: dev
      args:
        USER_ID: ${USER_ID-1000}
        GROUP_ID: ${GROUP_ID-1000}
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "7007:7007"
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT-5432}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-pass}
      POSTGRES_USER: ${POSTGRES_USER-postgres}
      POSTGRES_DB: ${POSTGRES_DB-backstage}
    extra_hosts:
        - "host.docker.internal:host-gateway"
    volumes:
      - ./backstage/app:/app

  postgres:
    image: postgres:16
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-pass}
      POSTGRES_USER: ${POSTGRES_USER-postgres}
      POSTGRES_DB: ${POSTGRES_DB-backstage}
    volumes:
      - postgres-storage:/var/lib/postgresql/data

  mysql:
    image: mysql:8
    profiles:
      - test
    volumes:
      - mysql-storage:/var/lib/mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: ${DEVLAKE_DBNAME-lake}
      MYSQL_USER: ${DEVLAKE_MYSQL_USER:-merico}
      MYSQL_PASSWORD: ${DEVLAKE_MYSQL_PASSWORD:-merico}
    command: --character-set-server=utf8mb4
      --collation-server=utf8mb4_bin
      --skip-log-bin

  grafana:
    profiles:
      - dashboard
    image: devlake.docker.scarf.sh/apache/devlake-dashboard:v0.18.0
    ports:
      - "3002:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      GF_SERVER_ROOT_URL: http://localhost:4000/grafana
      GF_USERS_DEFAULT_THEME: dark
      MYSQL_URL: ${DEVLAKE_DBADDRESS-mysql:3306}
      MYSQL_DATABASE: ${DEVLAKE_DBNAME-lake}
      MYSQL_USER: ${DEVLAKE_MYSQL_USER:-merico}
      MYSQL_PASSWORD: ${DEVLAKE_MYSQL_PASSWORD:-merico}
    restart: unless-stopped
    depends_on:
      - mysql

  devlake:
    profiles:
    - test
    image: devlake.docker.scarf.sh/apache/devlake:v0.18.0
    ports:
      - "8080:8080"
    restart: unless-stopped
    volumes:
      - ./.env:/app/.env:z
      - ./logs:/app/logs
    environment:
      DB_URL: ${DEVLAKE_MYSQL_CONNECTION_URL:-mysql://merico:merico@mysql:3306/lake?charset=utf8mb4&parseTime=True}
      ENCRYPTION_SECRET: ${DEVLAKE_ENCRYPTION_SECRET:-}
    depends_on:
      - mysql

  config-ui:
    profiles:
      - test
    image: devlake.docker.scarf.sh/apache/devlake-config-ui:v0.18.0
    ports:
      - "4000:4000"
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      DEVLAKE_ENDPOINT: devlake:8080
      GRAFANA_ENDPOINT: grafana:3000
      ADMIN_USER: ${DEVLAKE_ADMIN_USER:-devlake}
      ADMIN_PASS: ${DEVLAKE_ADMIN_PASSWORD:-merico}
    depends_on:
      - devlake

volumes:
  mysql-storage:
  postgres-storage:
  grafana-storage:
