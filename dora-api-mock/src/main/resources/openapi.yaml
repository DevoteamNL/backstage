openapi: 3.1.0
info:
  title: OpenDoraApiFirst
  description: Test if we can build API First
  version: 0.0.1
  contact:
    name: Open Dora
    email: open@dora.com
servers:
  - url: 'https://dev-api'
tags:
  - name: data-point
    description: <SchemaDefinition schemaRef="#/components/schemas/DataPoint" />
    x-displayName: DataPoint
  - name: response
    description: <SchemaDefinition schemaRef="#/components/schemas/MetricResponse" />
    x-displayName: MetricResponse
  - name: aggregation-types
    description: <SchemaDefinition schemaRef="#/components/schemas/MetricResponse" />
    x-displayName: aggregationTypesResponse
  - name: benchmark-response
    description: <SchemaDefinition schemaRef="#/components/schemas/BenchmarkResponse" />
    x-displayName: BenchmarkResponse
  - name: error-response
    description: <SchemaDefinition schemaRef="#/components/schemas/ErrorResponse" />
    x-displayName: ErrorResponse
paths:
  /metric:
    get:
      summary: Summary
      description: Description
      tags:
        - data-point
      operationId: dataPointsByMetrics
      parameters:
        - name: type
          in: query
          description: '`required`. Specify the type of metric the data points should be retrieved to'
          required: true
          schema:
            type: string
            enum:
              - df
              - mltc
              - cfr
              - mttr
        - name: from
          in: query
          description: '`required`. Date/time from when the results should be filtered. Should be before the ''to'' param, and should always be paired with the ''to'' param.'
          required: true
          schema:
            type: string
            format: date-time
            example: '2020-01-01T00:00:00Z'
        - name: to
          in: query
          description: '`required`. Date/time to when the results should be filtered. Should be before the current date/time and after the ''from'' param, and should always be paired with the ''from'' param.'
          required: true
          schema:
            type: string
            format: date-time
            example: '2020-01-31T23:59:59Z'
        - name: aggregation
          in: query
          description: '`optional`. Specify how the data points should be aggregated. If not informed, it will default to `weekly`'
          schema:
            type: string
            enum:
              - weekly
              - monthly
              - quarterly
            default: weekly
        - name: x-correlation-id
          in: header
          description: Unique identifer associated with the request
          schema:
            type: string
            format: uuid
          example: c0c62604-e3ab-4008-b882-4effcb4963ae
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricResponse'
          headers:
            x-correlation-id:
              description: Unique identifer associated with the request
              schema:
                type: string
                format: uuid
              example: c0c62604-e3ab-4008-b882-4effcb4963ae
        '201':
          description: Created
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          headers:
            x-correlation-id:
              description: Unique identifer associated with the request
              schema:
                type: string
                format: uuid
              example: c0c62604-e3ab-4008-b882-4effcb4963ae
        '401':
          description: Unauthorized! Should Provide a valid JWT token
          content: {}
          headers:
            x-correlation-id:
              description: Unique identifer associated with the request
              schema:
                type: string
                format: uuid
              example: c0c62604-e3ab-4008-b882-4effcb4963ae
        '403':
          description: Forbidden! Access denied. Do not have authority to call this API
          content: {}
          headers:
            x-correlation-id:
              description: Unique identifer associated with the request
              schema:
                type: string
                format: uuid
              example: c0c62604-e3ab-4008-b882-4effcb4963ae
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: Failed to connect to DevLake's DB
                reference: c0c62604-e3ab-4008-b882-4effcb4963ae
          headers:
            x-correlation-id:
              description: Unique identifer associated with the request
              schema:
                type: string
                format: uuid
              example: c0c62604-e3ab-4008-b882-4effcb4963ae
  /aggregation:
    get:
      summary: Get aggregation types
      description: Get aggregation types
      tags:
        - aggregation-types
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregationTypesResponse'
          headers:
            x-correlation-id:
              description: Unique identifer associated with the request
              schema:
                type: string
                format: uuid
              example: c0c62604-e3ab-4008-b882-4effcb4963ae
      operationId: get-aggregation
  /benchmark:
    get:
      summary: Your GET endpoint
      tags:
        - benchmark-response
      responses:
        '200':
          description: OK
          headers:
            x-correlation-id:
              schema:
                type: string
              description: Unique identifer associated with the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchmarkResponse'
        '500':
          description: Internal Server Error
          headers:
            x-correlation-id:
              schema:
                type: string
              description: Unique identifer associated with the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-benchmark
      description: |-
        Returns a key corresponding to the benchmark calculated from the data points that match the filters. 
        The metrics currently supported are below:

        | Metric Type | Description                   | Benchmark keys                                 |
        | ----------- | ------------------------------| ---------------------------------------------- |
        | `df`        | Deployment frequency.         | on-demand, week-month, month-6month, lt-6month |
        | `mltc`      | Median lead time for changes. | lt-1hour, lt-1week, week-6month, mt-6month     |
        | `cfr`       | Change Failure Rate.          | lt-15p, 15-25p, 25-30p, mt-30p                 |       
        | `mttr`      | Mean Time to Recovery         | lt-1hour, lt-1day, day-week, mt-6month         |
      parameters:
        - schema:
            type: string
            enum:
              - df
              - mltc
              - cfr
              - mttr
          in: query
          name: type
          required: true
        - schema:
            type: string
          in: query
          name: aggregation
          required: true
        - schema:
            type: string
          in: query
          name: project
        - schema:
            type: string
          in: query
          name: team
        - schema:
            type: string
          in: query
          name: from
        - schema:
            type: string
          in: query
          name: to
        - schema:
            type: string
          in: header
          name: x-correlation-id
          description: Unique identifer associated with the request
components:
  schemas:
    DataPoint:
      type: object
      x-examples:
        Example 1:
          - key: 1
            count: 3
            average: 3
      properties:
        key:
          type: integer
          minimum: 1
          maximum: 52
        count:
          type: integer
          minimum: 1
          maximum: 150
        average:
          type: integer
          minimum: 1
          maximum: 150
    AggregationType:
      x-stoplight:
        id: 1f7d0d5bb4a4e
      examples: []
      type: object
      properties:
        type:
          type: string
          enum:
            - weekly
            - monthly
            - quarterly
        description:
          type: string
    MetricResponse:
      type: array
      minItems: 4
      maxItems: 4
      items:
        $ref: '#/components/schemas/DataPoint'
    AggregationTypesResponse:
      type: array
      x-stoplight:
        id: 43ee9ca660a4e
      minItems: 3
      maxItems: 3
      uniqueItems: true
      items:
        $ref: '#/components/schemas/AggregationType'
    ErrorResponse:
      required:
        - message
        - reference
      type: object
      properties:
        message:
          title: Generic information about the failure
          type: string
          example: 'You have requested an unsupported metric name, please check the metric parameter'
        reference:
          title: Generated ID to be able to trace more information about the error in the logs
          type: string
          example: c0c62604-e3ab-4008-b882-4effcb4963ae
    BenchmarkResponse:
      title: BenchmarkResponse
      x-stoplight:
        id: ma2lcv5d5gfro
      type: object
      examples:
        - key: high
          value: '1.7'
      properties:
        key:
          type: string
          x-stoplight:
            id: npelrap9nw5pt
        value:
          type: string
          x-stoplight:
            id: h707172828k4m
      required:
        - key
        - value
